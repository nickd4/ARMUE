
========================================================================

** ELF Header Information

    File Name: ./cortex_m3_test.axf

    Machine class: ELFCLASS32 (32-bit)
    Data encoding: ELFDATA2LSB (Little endian)
    Header version: EV_CURRENT (Current version)
    Operating System ABI: none
    ABI Version: 0
    File Type: ET_EXEC (Executable) (2)
    Machine: EM_ARM (ARM)

    Image Entry point: Not specified
    Flags: None (0x05000000)

    ARM ELF revision: 5 (ABI version 2)

    Built with
    ARM Assembler, 4.1 [Build 894]
    ARM Linker, 4.1 [Build 894] 

    Header size: 52 bytes (0x34)
    Program header entry size: 32 bytes (0x20)
    Section header entry size: 40 bytes (0x28)

    Program header entries: 1
    Section header entries: 13

    Program header offset: 3472 (0x00000d90)
    Section header offset: 3504 (0x00000db0)

    Section header string table index: 12

========================================================================

** Program header #0 (PT_LOAD) [PF_X + PF_W + PF_R]
    Size : 1028 bytes (528 bytes in file)
    Virtual address: 0x00000000 (Alignment 8)


========================================================================

** Section #1 'ER_ROM1' (SHT_PROGBITS) [SHF_ALLOC + SHF_EXECINSTR]
    Size   : 524 bytes (alignment 4)
    Address: 0x00000000

    $d.realdata
    RESET
    __Vectors
        0x00000000:    010001f4    ....    DCD    16777716
        0x00000004:    000000d9    ....    DCD    217
        0x00000008:    000000c1    ....    DCD    193
        0x0000000c:    000000c3    ....    DCD    195
        0x00000010:    000000c5    ....    DCD    197
        0x00000014:    000000c7    ....    DCD    199
        0x00000018:    000000c9    ....    DCD    201
        0x0000001c:    00000000    ....    DCD    0
        0x00000020:    00000000    ....    DCD    0
        0x00000024:    00000000    ....    DCD    0
        0x00000028:    00000000    ....    DCD    0
        0x0000002c:    000000cb    ....    DCD    203
        0x00000030:    000000d1    ....    DCD    209
        0x00000034:    00000000    ....    DCD    0
        0x00000038:    000000d3    ....    DCD    211
        0x0000003c:    000000d5    ....    DCD    213
        0x00000040:    000000d7    ....    DCD    215
        0x00000044:    000000d7    ....    DCD    215
        0x00000048:    000000d7    ....    DCD    215
        0x0000004c:    000000d7    ....    DCD    215
        0x00000050:    000000d7    ....    DCD    215
        0x00000054:    000000d7    ....    DCD    215
        0x00000058:    000000d7    ....    DCD    215
        0x0000005c:    000000d7    ....    DCD    215
        0x00000060:    000000d7    ....    DCD    215
        0x00000064:    000000d7    ....    DCD    215
        0x00000068:    000000d7    ....    DCD    215
        0x0000006c:    000000d7    ....    DCD    215
        0x00000070:    000000d7    ....    DCD    215
        0x00000074:    000000d7    ....    DCD    215
        0x00000078:    000000d7    ....    DCD    215
        0x0000007c:    000000d7    ....    DCD    215
        0x00000080:    000000d7    ....    DCD    215
        0x00000084:    000000d7    ....    DCD    215
        0x00000088:    000000d7    ....    DCD    215
        0x0000008c:    000000d7    ....    DCD    215
        0x00000090:    00000000    ....    DCD    0
        0x00000094:    00000000    ....    DCD    0
        0x00000098:    00000000    ....    DCD    0
        0x0000009c:    00000000    ....    DCD    0
        0x000000a0:    00000000    ....    DCD    0
        0x000000a4:    00000000    ....    DCD    0
        0x000000a8:    00000000    ....    DCD    0
        0x000000ac:    00000000    ....    DCD    0
        0x000000b0:    000000d7    ....    DCD    215
        0x000000b4:    00000000    ....    DCD    0
        0x000000b8:    000000d7    ....    DCD    215
        0x000000bc:    000000d7    ....    DCD    215
    $t
    .text
    NMI_Handler
        0x000000c0:    e7fe        ..      B        NMI_Handler ; 0xc0
    HardFault_Handler
        0x000000c2:    e7fe        ..      B        HardFault_Handler ; 0xc2
    MemManage_Handler
        0x000000c4:    e7fe        ..      B        MemManage_Handler ; 0xc4
    BusFault_Handler
        0x000000c6:    e7fe        ..      B        BusFault_Handler ; 0xc6
    UsageFault_Handler
        0x000000c8:    e7fe        ..      B        UsageFault_Handler ; 0xc8
    SVC_Handler
        0x000000ca:    4770        pG      BX       lr
        0x000000cc:    4770        pG      BX       lr
        0x000000ce:    4770        pG      BX       lr
    DebugMon_Handler
        0x000000d0:    e7fe        ..      B        DebugMon_Handler ; 0xd0
    PendSV_Handler
        0x000000d2:    e7fe        ..      B        PendSV_Handler ; 0xd2
    SysTick_Handler
        0x000000d4:    e7fe        ..      B        SysTick_Handler ; 0xd4
    AACI_IRQHandler
    CAN_IRQHandler
    CHLCD_IRQHandler
    CLCD_IRQHandler
    CPU_CLCD_IRQHandler
    ENET_IRQHandler
    FLEXRAY_IRQHandler
    I2C_IRQHandler
    LIN_IRQHandler
    MCIA_IRQHandler
    MCIB_IRQHandler
    RTC_IRQHandler
    SPI_IRQHandler
    TIM0_IRQHandler
    TIM2_IRQHandler
    UART0_IRQHandler
    UART1_IRQHandler
    UART2_IRQHandler
    UART3_IRQHandler
    UART4_IRQHandler
    USBDC_IRQHandler
    USBHC_IRQHandler
    WDT_IRQHandler
        0x000000d6:    e7fe        ..      B        AACI_IRQHandler ; 0xd6
    Reset_Handler
        0x000000d8:    4671        qF      MOV      r1,lr
        0x000000da:    4672        rF      MOV      r2,lr
        0x000000dc:    466e        nF      MOV      r6,sp
        0x000000de:    c606        ..      STM      r6!,{r1,r2}
        0x000000e0:    e9360018    6...    LDMDB    r6!,{r3,r4}
        0x000000e4:    4673        sF      MOV      r3,lr
        0x000000e6:    4a47        GJ      LDR      r2,[pc,#284] ; [0x204] = 0x20c
        0x000000e8:    6013        .`      STR      r3,[r2,#0]
        0x000000ea:    6811        .h      LDR      r1,[r2,#0]
        0x000000ec:    df01        ..      SVC      #0x1 ; formerly SWI
        0x000000ee:    f04f0308    O...    MOV      r3,#8
        0x000000f2:    f04f0101    O...    MOV      r1,#1
        0x000000f6:    b402        ..      PUSH     {r1}
        0x000000f8:    bc20         .      POP      {r5}
        0x000000fa:    f04f0202    O...    MOV      r2,#2
        0x000000fe:    461c        .F      MOV      r4,r3
        0x00000100:    c306        ..      STM      r3!,{r1,r2}
        0x00000102:    ccc0        ..      LDM      r4!,{r6,r7}
        0x00000104:    6825        %h      LDR      r5,[r4,#0]
        0x00000106:    b406        ..      PUSH     {r1,r2}
        0x00000108:    bc18        ..      POP      {r3,r4}
        0x0000010a:    ea4f1151    O.Q.    LSR      r1,r1,#5
        0x0000010e:    b2ca        ..      UXTB     r2,r1
        0x00000110:    b082        ..      SUB      sp,sp,#8
        0x00000112:    493d        =I      LDR      r1,[pc,#244] ; [0x208] = 0x10001f4
        0x00000114:    468d        .F      MOV      sp,r1
        0x00000116:    b406        ..      PUSH     {r1,r2}
        0x00000118:    bc18        ..      POP      {r3,r4}
        0x0000011a:    6812        .h      LDR      r2,[r2,#0]
        0x0000011c:    9200        ..      STR      r2,[sp,#0]
        0x0000011e:    9b00        ..      LDR      r3,[sp,#0]
        0x00000120:    4479        yD      ADD      r1,r1,pc
        0x00000122:    4788        .G      BLX      r1
        0x00000124:    460a        .F      MOV      r2,r1
        0x00000126:    4611        .F      MOV      r1,r2
        0x00000128:    46f7        .F      MOV      pc,lr
        0x0000012a:    448d        .D      ADD      sp,sp,r1
        0x0000012c:    f04f0200    O...    MOV      r2,#0
        0x00000130:    fa61f102    a...    ROR      r1,r1,r2
        0x00000134:    ea6f0201    o...    MVN      r2,r1
        0x00000138:    ea210102    !...    BIC      r1,r1,r2
        0x0000013c:    fb01f102    ....    MUL      r1,r1,r2
        0x00000140:    4411        .D      ADD      r1,r1,r2
        0x00000142:    ea420201    B...    ORR      r2,r2,r1
        0x00000146:    4672        rF      MOV      r2,lr
        0x00000148:    ea4f0252    O.R.    LSR      r2,r2,#1
        0x0000014c:    4613        .F      MOV      r3,r2
        0x0000014e:    42da        .B      CMN      r2,r3
        0x00000150:    4672        rF      MOV      r2,lr
        0x00000152:    ea4f0252    O.R.    LSR      r2,r2,#1
        0x00000156:    4673        sF      MOV      r3,lr
        0x00000158:    ea4f0363    O.c.    ASR      r3,r3,#1
        0x0000015c:    429a        .B      CMP      r2,r3
        0x0000015e:    421a        .B      TST      r2,r3
        0x00000160:    ea4f1343    O.C.    LSL      r3,r3,#5
        0x00000164:    fa63f302    c...    ROR      r3,r3,r2
        0x00000168:    f1a30302    ....    SUB      r3,r3,#2
        0x0000016c:    eb620203    b...    SBC      r2,r2,r3
        0x00000170:    f04f0201    O...    MOV      r2,#1
        0x00000174:    f04f0302    O...    MOV      r3,#2
        0x00000178:    eb620203    b...    SBC      r2,r2,r3
        0x0000017c:    4672        rF      MOV      r2,lr
        0x0000017e:    f04f0201    O...    MOV      r2,#1
        0x00000182:    f04f0301    O...    MOV      r3,#1
        0x00000186:    eb420203    B...    ADC      r2,r2,r3
        0x0000018a:    4672        rF      MOV      r2,lr
        0x0000018c:    f04f0301    O...    MOV      r3,#1
        0x00000190:    ea4f0252    O.R.    LSR      r2,r2,#1
        0x00000194:    eb420203    B...    ADC      r2,r2,r3
        0x00000198:    f04f0201    O...    MOV      r2,#1
        0x0000019c:    ea4f72c2    O..r    LSL      r2,r2,#31
        0x000001a0:    f04f0301    O...    MOV      r3,#1
        0x000001a4:    eb420203    B...    ADC      r2,r2,r3
        0x000001a8:    4672        rF      MOV      r2,lr
        0x000001aa:    f04f0301    O...    MOV      r3,#1
        0x000001ae:    eb420203    B...    ADC      r2,r2,r3
        0x000001b2:    4672        rF      MOV      r2,lr
        0x000001b4:    4673        sF      MOV      r3,lr
        0x000001b6:    eb420203    B...    ADC      r2,r2,r3
        0x000001ba:    f04f0201    O...    MOV      r2,#1
        0x000001be:    ea4f72c2    O..r    LSL      r2,r2,#31
        0x000001c2:    f1020201    ....    ADD      r2,r2,#1
        0x000001c6:    4613        .F      MOV      r3,r2
        0x000001c8:    eb420203    B...    ADC      r2,r2,r3
        0x000001cc:    ea820203    ....    EOR      r2,r2,r3
        0x000001d0:    f1a30314    ....    SUB      r3,r3,#0x14
        0x000001d4:    f1020214    ....    ADD      r2,r2,#0x14
        0x000001d8:    f1040400    ....    ADD      r4,r4,#0
        0x000001dc:    2c01        .,      CMP      r4,#1
        0x000001de:    2b01        .+      CMP      r3,#1
        0x000001e0:    2b00        .+      CMP      r3,#0
        0x000001e2:    2b15        .+      CMP      r3,#0x15
        0x000001e4:    2d00        .-      CMP      r5,#0
        0x000001e6:    ea4f0162    O.b.    ASR      r1,r2,#1
        0x000001ea:    ea4f0342    O.B.    LSL      r3,r2,#1
        0x000001ee:    ea4f0152    O.R.    LSR      r1,r2,#1
        0x000001f2:    ea4f0252    O.R.    LSR      r2,r2,#1
        0x000001f6:    fb01f102    ....    MUL      r1,r1,r2
        0x000001fa:    ea4f03a2    O...    ASR      r3,r2,#2
        0x000001fe:    4411        .D      ADD      r1,r1,r2
        0x00000200:    4708        .G      BX       r1
        0x00000202:    4611        .F      MOV      r1,r2
    $d
        0x00000204:    0000020c    ....    DCD    524
        0x00000208:    010001f4    ....    DCD    16777716

** Section #2 'ER_ROM1' (SHT_PROGBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 4 bytes (alignment 4)
    Address: 0x0000020c


** Section #3 'RW_RAM1' (SHT_NOBITS) [SHF_ALLOC + SHF_WRITE]
    Size   : 500 bytes (alignment 8)
    Address: 0x01000000


** Section #4 '.debug_abbrev' (SHT_PROGBITS)
    Size   : 32 bytes


** Section #5 '.debug_frame' (SHT_PROGBITS)
    Size   : 212 bytes


** Section #6 '.debug_info' (SHT_PROGBITS)
    Size   : 364 bytes


** Section #7 '.debug_line' (SHT_PROGBITS)
    Size   : 176 bytes


** Section #8 '.symtab' (SHT_SYMTAB)
    Size   : 768 bytes (alignment 4)
    String table #9 '.strtab'
    Last local symbol no. 13


** Section #9 '.strtab' (SHT_STRTAB)
    Size   : 756 bytes


** Section #10 '.note' (SHT_NOTE)
    Size   : 28 bytes (alignment 4)


** Section #11 '.comment' (SHT_PROGBITS)
    Size   : 444 bytes


** Section #12 '.shstrtab' (SHT_STRTAB)
    Size   : 112 bytes


